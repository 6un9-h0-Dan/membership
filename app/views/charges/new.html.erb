<div id="checkout" class="one-time-donation">
  <div class="content">
    <section id="checkout-plan">
      <h4>Pay what you can. Every dollar counts.</h4>
      <p>“To each according to their ability, to each according to their need.” Contributing what you can, where you can is what we’re all about.</p>
      <p>Folks who donate $100 on a one-time basis will receive a free gift from our store. People who pay dues at the rate of $100 per month or more will receive a thank you call from us.</p>
    </section>
    <section id='checkout-payment'>
    <%= form_with(model: Donation, url: {controller: "charges", action: :create }, local: true, id: 'payment-form') do |form| %>
      <div>
        <% if flash[:error].present? %>
          <div id="error_explanation">
            <p><%= flash[:error] %></p>
          </div>
        <% end %>
        <div class="form-row">
          <label for="card-element">
            Credit or debit card
          </label>
          <div id="card-element">
            <!-- A Stripe Element will be inserted here. -->
          </div>

          <!-- Used to display form errors. -->
          <div id="card-errors" role="alert"></div>
        </div>

        <%= form.number_field :amount, step: 1, placeholder: '$0', class: 'input-field' %>

        <%= recaptcha_tags %>
        <button class="button primary">Make my donation</button>
      </div>

      <script>
        // Create a Stripe client.
        const stripe = Stripe('<%= ENV['STRIPE_PUBLISHABLE_KEY'] %>');

        // Create an instance of Elements.
        const elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        const style = {
          base: {
            color: '#32325d',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
              color: '#aab7c4'
            }
          },
          invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
          }
        };

        // Create an instance of the card Element.
        const card = elements.create('card', {style: style});

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function(event) {
          const displayError = document.getElementById('card-errors');
          if (event.error) {
            displayError.textContent = event.error.message;
          } else {
            displayError.textContent = '';
          }
        });

        // Handle form submission.
        const form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
          event.preventDefault();

          stripe.createToken(card).then(function(result) {
            if (result.error) {
              // Inform the user if there was an error.
              const errorElement = document.getElementById('card-errors');
              errorElement.textContent = result.error.message;
            } else {
              // Send the token to your server.
              stripeTokenHandler(result.token);
            }
          });
        });

        // Submit the form with the token ID.
        function stripeTokenHandler(token) {
          // Insert the token ID into the form so it gets submitted to the server
          const form = document.getElementById('payment-form');
          const stripeHiddenInput = document.createElement('input');
          stripeHiddenInput.setAttribute('type', 'hidden');
          stripeHiddenInput.setAttribute('name', 'stripeToken');
          stripeHiddenInput.setAttribute('value', token.id);
          form.appendChild(stripeHiddenInput);

          const planHiddenInput = document.createElement('input');
          planHiddenInput.setAttribute('type', 'hidden');
          planHiddenInput.setAttribute('name', 'subscription[plan_attributes][id]');
          planHiddenInput.setAttribute('value', '<%= @subscription&.plan&.id %>');
          form.appendChild(planHiddenInput);

          // Submit the form
          form.submit();
        }
      </script>
    <% end %>
    </section>
  </div>
</div>
